#!/usr/bin/env node --harmony
'use strict'

process.env.NODE_PATH = __dirname + '/../node_modules/'

const program = require('commander')

program
    .version(require('../package').version)

program
    .usage('<command>')

program.on('--help', function(){
    console.log('  Examples:');
    console.log('');
    console.log('    $ slice init');
    console.log('    $ slice run --help');
    console.log('');
});

program
    .command('add')
    .description('新增一个项目模板')
    .alias('a')
    .action(() => {
        require('../command/add')()
    });

program
    .command('list')
    .description('可用项目模板列表')
    .alias('l')
    .action(() => {
        require('../command/list')()
    });

program
    .command('init')
    .description('初始化一个新项目')
    .alias('i')
    .action(() => {
        require('../command/init')()
    });

program
    .command('delete')
    .description('删除一个项目模板')
    .alias('d')
    .action(() => {
        require('../command/delete')()
    });

program
    .command('run [project-dir]')
    .alias('r')
    .description('在浏览器运行一个项目')
    .action((proDir) => {
        require('../command/run')(proDir);
    });

program
    .command('build [project-dir]')
    .alias('b')
    .description('输出项目页面')
    .action((proDir) => {
        require('../command/build')(proDir);
    });

program
    .command('config')
    .description('打印slice-cli配置文件路径')
    .alias('c')
    .option('-l, --list', '打印当前配置文件信息')
    .option('-d, --dir <file>', '重新指定slice-cli配置文件')
    .action((options) => {
        var list = options.list;
        var dir = options.dir;
        
        if (list) {
            require('../command/config.list')();
        } else if (dir) {
            require('../command/config.dir')(dir);
        } else {
            require('../command/config')();
        }
    });

program.parse(process.argv);

if (!program.args.length) {
    program.help()
}